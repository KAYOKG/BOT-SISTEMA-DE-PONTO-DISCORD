
'use strict';

/**
 * @module
 * @public
 * @requires isNode
 * @description wrap the selection with the passed in dom element
 * @param {Object} [dom] the dom node to wrap the selection with
 * @returns {Object} [this] like most methods, returns parent object
 */
var wrap = function wrap(dom) {
	var _this = this;

	// if passed a dom node directly, check it and append it
	if (this.isNode(dom)) {
		this.each(function (el) {
			var w = dom.cloneNode(true);
			w.appendChild(el.cloneNode(true));

			el.parentNode.replaceChild(w, el);
		});
	} else if (typeof dom === 'string') {
		(function () {
			var tmp = document.createElement('div');

			tmp.innerHTML = dom;

			_this.each(function (el) {
				var w = tmp.firstChild.cloneNode(true);

				w.appendChild(el.cloneNode(true));
				el.parentNode.replaceChild(w, el);
			});
		})();
	}

	return this;
};

module.exports = wrap;