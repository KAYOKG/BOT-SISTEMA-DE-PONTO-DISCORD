
'use strict';

/**
 * @module
 * @public
 * @requires isNode
 * @description prepends dom nodes using those nodes directly or a string
 * @param {Object|string} [prependMe] the dom node to prepend to the dom
 * @returns {Object} [this] like most methods, returns parent object
 */
var prepend = function prepend(prependMe) {
	var _this = this;

	// if passed a dom node directly, check it and append it
	if (this.isNode(prependMe)) {
		this.each(function (el) {
			return el.insertBefore(prependMe.cloneNode(), el.firstChild);
		});
	} else if (typeof prependMe === 'string') {
		(function () {
			var tmp = document.createElement('div');
			tmp.innerHTML = prependMe;

			_this.each(function (el) {
				return el.insertBefore(tmp.firstChild.cloneNode(true), el.firstChild);
			});
		})();
	}

	return this;
};

module.exports = prepend;